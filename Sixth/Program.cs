// Урок 6. Одномерные массивы. Продолжение
// Задача 41: Пользователь вводит с клавиатуры M чисел. Посчитайте,
// сколько чисел больше 0 ввёл пользователь.
// 0, 7, 8, -2, -2 -> 2
// 1, -7, 567, 89, 223-> 3

Console.Write("Введите колличество чисел: ");
int n = int.Parse(Console.ReadLine());
int count = 0;
for (int i = 0; i < n; i++)
{
    Console.Write($"Введите число {i + 1}: ");
    int x = int.Parse(Console.ReadLine());
    if (x > 0)
        count++;
}
Console.WriteLine($"Положительных чисел: {count}");




// Задача 43: Напишите программу, которая найдёт точку пересечения двух 
// прямых, заданных уравнениями y = k1 * x + b1, y = k2 * x + b2; значения
//  b1, k1, b2 и k2 задаются пользователем.

// b1 = 2, k1 = 5, b2 = 4, k2 = 9 -> (-0,5; -0,5)
// double pointX;
// double pointY;

// // Console.Write("Даны прямые заданные формулами y = k1 * x + b1, y = k2 * x + b2");
// Console.Write("Введите по очереди b1, k1, b2 и k2 одной строкой через пробел: ");
// int[] arr = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();
// int k1 = arr [1];
// int k2 = arr [3];
// int b1 = arr [0];
// int b2 = arr [2];
// ;
// if (k1 == k2)
// {
//     Console.WriteLine("Прямые паралельны");
// }
// else
// {
//     pointX = (double) (b2-b1)/(k1-k2);
//     pointY = (double) k1*(b2-b1)/(k1-k2) + b1;
//     Console.WriteLine("Координаты точки пересечения двух прямых:");
//     Console.WriteLine($"Х: {pointX:0.00}");
//     Console.WriteLine($"Y: {pointY:0.00}");
// }




// задача 40 - HARD необязательная. На вход программы подаются три
//  целых положительных числа. Определить , является ли это сторонами
//   треугольника. Если да, то вывести всю информацию по нему - площадь, 
//   периметр, значения углов треугольника в градусах, является ли он прямоугольным,
//    равнобедренным, равносторонним.




// задача 2 HARD необязательная. Сгенерировать массив случайных целых чисел размерностью m*n (размерность вводим с клавиатуры). Вывести на экран красивенько таблицей. Найти минимальное число и его индекс, найти максимальное число и его индекс. Вывести эту информацию на экран.

// Задача 6sem VERY HARD необязательная Имеется список чисел. Создайте список, в который попадают числа, описывающие максимальную возрастающую последовательность. Порядок элементов менять нельзя.
// Одно число - это не последовательность.
// Пример:
// [1, 5, 2, 3, 4, 6, 1, 7] => [1, 7]
// [1, 5, 2, 3, 4, 1, 7, 8 , 15 , 1 ] => [1, 5]
// [1, 5, 3, 4, 1, 7, 8 , 15 , 1 ] => [3, 5]

